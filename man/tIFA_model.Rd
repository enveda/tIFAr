% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tifa_model.R
\name{tIFA_model}
\alias{tIFA_model}
\title{Truncated Infinite Factor Analysis Imputation Model}
\usage{
tIFA_model(data, missingness, M, initial_dataset, k = 5)
}
\arguments{
\item{data}{The data on which to apply imptutation. Should be processed using [FA_process()] function.}

\item{missingness}{The missingness pattern of the input data. This is returned from the [FA_process()] function applied to the input data.}

\item{M}{The number of MCMC iterations desired. A multiple of 5 is expected.}

\item{initial_dataset}{Starting imputation for the input data. E.g., the imputed dataset resulting from mean imputation.}

\item{k}{The number of "effective-factors" desired for use in the tIFA model. Defaults to 5.}
}
\value{
Returns a list containing 11 entries.

* store_data: MCMC draws of the imputed data entries.

* store_alpha: MCMC draws of the alpha parameter.

* store_sigma_inv: MCMC draws of the sigma^-2 entries.

* store_lambda: MCMC draws of the loadings matrix.

* store_eta: MCMC draws of the latent factor scores.

* store_mu: MCMC draws of the mean vector.

* store_k_t: MCMC draws of the effective factor number (unchanging).

* store_phi: MCMC draws of the local shrinkage parameters.

* store_delta: MCMC draws of the multiplicative gamma process parameters.

* store_b_sigma: MCMC draws of the b_sigma parameter (unchanging).

* store_Z: MCMC draws of the missingness designation indicator for each imputed entry.

* input_data: The dataset input into the tIFA model.

* input_missingness: The missingness pattern input into the tIFA model.
}
\description{
Applies the tIFA imputation method to the input dataset.
}
\examples{
# generate example data
example_data <- matrix(abs(rnorm(100)), nrow = 5)

# add missingness to example data coded as 0.001
example_data[4, 2] <- 0.001
example_data[2, 18] <- 0.001

# apply data pre-processing function
input_data <- FA_process(example_data, coding = 0.001)

# perform zero imputation to use as initial imputed data value in tIFA
zero_imp <- input_data$data
zero_imp[is.na(zero_imp)] <- 0

# run tIFA model
tIFA_model(data = input_data$data, missingness = input_data$missingness, M = 50,
           initial_dataset = zero_imp, k = 5)

}
